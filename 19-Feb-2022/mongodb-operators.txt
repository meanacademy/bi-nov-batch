{
        "_id" : ObjectId("5ee1ba6dfa12962d908dd808"),       
        "id" : 1,
        "first_name" : "Boyce",
        "last_name" : "Abercrombie",
        "email" : "babercrombie0@freewebs.com",
        "gender" : "Male",
        "ip_address" : "121.233.233.123",
        "birth_year" : 2000,
        "hobbies" : [
                "reading",
                "surfing",
                "playing cricket"
        ],
        "lastModified" : ISODate("2021-05-30T05:10:50.849Z")
}

Operators

1. Query and Projection Operators
    1.1 Comparison Query Operators
        1. $eq
                Matches values that are equal to a specified value
                Syntax: { fieldName: {$eq: value}}
                Ex: db.students.find({
                    id: {
                        $eq: 300
                    }
                })

                db.students.find({id: 300})

        2. $gt
                Matches values that are greater than a specified value
                Syntax: {fieldName: {$gt: value}}
                Ex.: db.students.find({
                    birth_year: {
                        $gt: 2000
                    }
                }).count()
                556
        3. $gte
                Matches values that are greater than or equal to a specified value
                Syntax: { fieldName: {$gte: value}}
                Ex.: db.students.find({
                    birth_year: {
                        $gte: 2000
                    }
                }).count()
                584
        4. $lt
                Matches values that are less than a specified value
                Syntax: { fieldName: {$lt: value}}
                Ex.: db.students.find({
                    birth_year: {
                        $lt: 2000
                    }
                }).count()
                416
        5. $lte
                Matches values that are less than or equal to a specified value
                Syntax: { fieldName: {$lte: value}}
                Ex.: db.students.find({
                    birth_year: {
                        $lte: 2000
                    }
                }).count()
                444
        6. $ne
                Matches values that are not equal to a specified value
                Syntax: { fieldName: {$ne: value}}
                Ex.: db.students.find({
                    birth_year: {
                        $ne: 2000
                    }
                }).count()
                974

    1.2 Logical Query Operator
        1. $and
            joins Query clauses with a logical AND. 
            it returns all the documents that match the condition of both clauses

            Syntax: 
            {$and: [{expression1}, {expression2}, .... {expression3} ]}
            
            Ex:
            db.students.find({
                $and: [
                    {birth_year: 2000},
                    {gender: 'Male'}
                ]
            }).count()
            14

            db.students.find({
                $and: [
                    {birth_year: {$gt: 2000}},
                    {gender: 'Male'}
                ]
            }).count()
            268
        2. $or
            joins Query clauses with a logical OR operator
            it returns all the documents that match the conditions of either clause

            Syntax: {$or: [expression1, expression2, ...expressionN]
            Ex.: db.students.find({
              
                    db.students.find(
                        {
                            $or: [{birth_year: 2000}, {gender: 'Male'}]
                        })
            502
        3. $not
            Syntax: {fieldName: {$not: {operator-expression}}}
            Ex.: db.students.find({
                birth_year: {
                    $not: {
                        $gt: 2000
                    }
                }
            }).count()
            446

    1.3 Element Query Operator
        1. $exists
            Matches documents that have specified field.
            Syntax: {field: {$exists: boolean}}

            Ex.: db.students.find({birth_year: {$exists: true}}).count()
    
    1.4 Array Query Operator
        1. $all
            Matches arrays that contains all the elements specified in the Query

            Syntax: {file_name: {$all: [value1, value2, ... valueN]}}

            Ex.: db.students.find({
                hobbies: {
                    $all: [ "reading", "surfing", "playing cricket"]
                }
            }).count()
            417
        2. $size
            selects documents if the array field is a specified size

            Syntax: {fieldName: {$size: value}}

            Ex.: db.students.find({
                hobbies: {
                    $size: 3
                }
            }).count()
            973

2. Update Operator
    1. $inc 
        increments the value of the field by the specified amount
        Syntax: {$inc: {fieldName: amount}}

        db.students.updateOne({id: 1}, {$inc: {birth_year: 1}}) //increments
        db.students.updateOne({id: 1}, {$inc: {birth_year: -1}}) //decrements
    2. $min 
        updates the field if the specified value is less than the existing value
        Syntax: {$min: {fieldName: value}}

        Ex.: db.students.updateOne({id: 1}, {$min: {birth_year: 1990}})
    3. $max
        updates the field if the specified value is greater than the existing value
        syntax: {$max: {fieldName: value}}
        ex: db.students.updateOne({id: 1}, {$max: {birth_year: 2000}})
    3. $mul
        multiplies the value of the field by the specified amount
        syntax: {$mul: {fieldName: value}}

        Ex: db.students.updateOne({id: 1}, {$mul: {birth_year: 1}})
    4. $set
        sets the value of a field in a document
        Syntax: {$set: {fieldName: value}}
    5. $unset
        removes the specified field form a document
        Syntax: {$unset: {fieldName: ""}}
        Ex: db.students.updateOne({id: 1}, {$unset: {ip_address: ""}})